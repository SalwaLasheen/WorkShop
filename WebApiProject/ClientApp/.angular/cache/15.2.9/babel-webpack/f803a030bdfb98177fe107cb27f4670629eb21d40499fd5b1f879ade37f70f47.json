{"ast":null,"code":"var _class;\nimport { FormControl, Validators } from '@angular/forms';\nimport { CheckProfileStatusResponseModel } from 'src/app/_models/CheckProfileStatusResponseModel';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"ngx-toastr\";\nimport * as i3 from \"src/app/_services/profile.service\";\nimport * as i4 from \"@angular/common\";\nfunction ProfileComponent_span_40_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 30);\n    i0.ɵɵtext(1, \" Dial Number inavlid\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ProfileComponent_tr_60_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 31);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", ctx_r1.object, \" \", ctx_r1.arr, \" \");\n  }\n}\nexport class ProfileComponent {\n  constructor(fb, toastr, service) {\n    this.fb = fb;\n    this.toastr = toastr;\n    this.service = service;\n    this.checkProfileResponse = new CheckProfileStatusResponseModel();\n    this.DialField = new FormControl();\n    this.SourceIdField = new FormControl();\n    this.LangIdField = new FormControl();\n    this.object = [];\n    this.arr = [];\n  }\n  ngOnInit() {\n    this.loadForm();\n  }\n  loadForm() {\n    this.formGroup = this.fb.group({\n      DialField: [\"\", [Validators.required]],\n      SourceIdField: [\"\"],\n      LangIdField: [\"\"],\n      categoy: [\"\"]\n    });\n  }\n  Clear() {\n    this.formGroup.reset();\n    this.loadForm();\n  }\n  AddNewProfile() {\n    if (this.formGroup.invalid) {\n      this.HandleConditionalForm();\n      return;\n    }\n    console.log(\"AddNewProfile\", this.formGroup.value);\n    return this.service.createNewProfile(this.formGroup.value).subscribe(res => {\n      console.log(res);\n      console.log(res.bucketInfo);\n      console.log(res.errorDoc);\n      this.arr = res.bucketInfo;\n      this.object = res.errorDoc;\n      this.showToasterSuccess(\"Successfully Posted\");\n      this.Clear();\n    }, err => {\n      console.log(err);\n      this.showToasterError(err.error);\n    });\n  }\n  HandleConditionalForm() {\n    if (this.formGroup.get(\"dialField\")?.invalid) return this.showToasterError('Invalid Dial Number');\n  }\n  showToasterError(message) {\n    return this.toastr.error(message);\n  }\n  showToasterSuccess(message) {\n    return this.toastr.success(message);\n  }\n}\n_class = ProfileComponent;\n_class.ɵfac = function ProfileComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ToastrService), i0.ɵɵdirectiveInject(i3.ProfileService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-profile\"]],\n  decls: 65,\n  vars: 3,\n  consts: [[1, \"container\", \"w-60\", \"mt-4\"], [1, \"col-12\", \"row\", \"align-items-center\"], [1, \"line\"], [1, \"card\", \"card-size\"], [1, \"card-header\", \"h-25\"], [1, \"card-body\", \"border-secondary\"], [3, \"formGroup\"], [1, \"row\"], [1, \"col-md-6\"], [1, \"input-label\"], [1, \"form-text\", \"text-muted\", \"label-style\"], [\"formControlName\", \"categoy\", 1, \"form-control\", \"label-style\", \"text-muted\", \"shadow-sm\", \"bg-white\", \"rounded\", \"mb-3\", \"border-success\"], [\"value\", \"1\"], [\"value\", \"2\"], [\"value\", \"3\"], [\"value\", \"4\"], [\"formControlName\", \"SourceIdField\", \"autocomplete\", \"off\", \"maxlength\", \"2\", 1, \"form-control\", \"shadow-sm\", \"ml-56\", \"mb-3\", \"bg-white\", \"rounded\", \"custom-source\", \"border-success\"], [\"formControlName\", \"DialField\", \"autocomplete\", \"off\", \"required\", \"\", \"maxlength\", \"20\", 1, \"form-control\", \"shadow-sm\", \"mb-3\", \"bg-white\", \"rounded\", \"border-success\"], [\"class\", \"text-danger font-weight-bolder text-danger\", 4, \"ngIf\"], [1, \"col-md-7\"], [\"formControlName\", \"LangIdField\", \"autocomplete\", \"off\", \"maxlength\", \"1\", 1, \"form-control\", \"shadow-sm\", \"mb-3\", \"bg-white\", \"rounded\", \"border-success\"], [1, \"m-3\", \"mt-3\", \"d-md-flex\", \"justify-content-md-end\"], [1, \"btn\", \"btn-md\", \"btn-primary\", \"m-1\", 3, \"click\"], [1, \"shadow\", \"p-3\", \"mb-5\", \"bg-body\", \"rounded\"], [1, \"container\"], [1, \"table\", \"table-hover\", \"table-bordered\", \"table-striped\"], [1, \"header-style\"], [\"class\", \"ml-3\", 4, \"ngIf\"], [1, \"col-md-4\"], [\"colspan\", \"10\", 1, \"form-text\", \"text-muted\"], [1, \"text-danger\", \"font-weight-bolder\", \"text-danger\"], [1, \"ml-3\"]],\n  template: function ProfileComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\");\n      i0.ɵɵtext(3, \"WorkShop: Call Check Profile Status Service\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"hr\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 3);\n      i0.ɵɵelement(6, \"h5\", 4);\n      i0.ɵɵelementStart(7, \"div\", 5)(8, \"div\")(9, \"div\", 6)(10, \"div\")(11, \"div\", 7)(12, \"div\", 8)(13, \"div\")(14, \"div\", 9)(15, \"small\", 10);\n      i0.ɵɵtext(16, \"Option Categorize\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"div\", 8)(18, \"select\", 11)(19, \"option\", 12);\n      i0.ɵɵtext(20, \" Success with No Packege Included\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"option\", 13);\n      i0.ɵɵtext(22, \" Technical Error with No Packege\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"option\", 14);\n      i0.ɵɵtext(24, \" Success with Packege Included\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"option\", 15);\n      i0.ɵɵtext(26, \" Technical Error with Packege\");\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelementStart(27, \"div\")(28, \"div\", 9)(29, \"small\", 10);\n      i0.ɵɵtext(30, \" Source Id \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"div\", 8);\n      i0.ɵɵelement(32, \"input\", 16);\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(33, \"div\", 8)(34, \"div\")(35, \"div\", 9)(36, \"small\", 10);\n      i0.ɵɵtext(37, \"Dial Number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(38, \"div\", 8);\n      i0.ɵɵelement(39, \"input\", 17);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(40, ProfileComponent_span_40_Template, 2, 0, \"span\", 18);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(41, \"div\")(42, \"div\", 9)(43, \"small\", 10);\n      i0.ɵɵtext(44, \"Language Id\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(45, \"div\", 19);\n      i0.ɵɵelement(46, \"input\", 20);\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelementStart(47, \"div\")(48, \"div\", 21)(49, \"button\", 22);\n      i0.ɵɵlistener(\"click\", function ProfileComponent_Template_button_click_49_listener() {\n        return ctx.Clear();\n      });\n      i0.ɵɵtext(50, \"Clear\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(51, \"button\", 22);\n      i0.ɵɵlistener(\"click\", function ProfileComponent_Template_button_click_51_listener() {\n        return ctx.AddNewProfile();\n      });\n      i0.ɵɵtext(52, \"Save\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(53, \"div\", 23)(54, \"div\", 24)(55, \"table\", 25)(56, \"thead\", 26)(57, \"th\");\n      i0.ɵɵtext(58, \" Response \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(59, \"tbody\");\n      i0.ɵɵtemplate(60, ProfileComponent_tr_60_Template, 2, 2, \"tr\", 27);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(61, \"tfoot\", 28)(62, \"tr\")(63, \"th\", 29);\n      i0.ɵɵtext(64, \" No Response \");\n      i0.ɵɵelementEnd()()()()()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"formGroup\", ctx.formGroup);\n      i0.ɵɵadvance(31);\n      i0.ɵɵproperty(\"ngIf\", ctx.DialField.errors == null ? null : ctx.DialField.errors.invalidName);\n      i0.ɵɵadvance(20);\n      i0.ɵɵproperty(\"ngIf\", ctx.object != null);\n    }\n  },\n  dependencies: [i4.NgIf, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.MaxLengthValidator, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\".card-header[_ngcontent-%COMP%]\\r\\n{\\r\\n  background-color:  rgb(49, 190, 49) !important;\\r\\n  height: 44px !important;\\r\\n}\\r\\n.card[_ngcontent-%COMP%]{\\r\\n  border: 1px solid green !important;\\r\\n  border-left-width: unset !important;\\r\\n  border-top: thick !important;\\r\\n}\\r\\n.shadow[_ngcontent-%COMP%] {\\r\\n  box-shadow: 0 0.5rem 1rem #84b79f !important;\\r\\n}\\r\\n.table-striped[_ngcontent-%COMP%]    > tbody[_ngcontent-%COMP%]    > tr[_ngcontent-%COMP%]:nth-child(odd)    > td[_ngcontent-%COMP%], .table-striped[_ngcontent-%COMP%]    > tbody[_ngcontent-%COMP%]    > tr[_ngcontent-%COMP%]:nth-child(odd)    > th[_ngcontent-%COMP%] {\\r\\n  background-color: rgb(159, 238, 159);\\r\\n}\\r\\n.table-striped[_ngcontent-%COMP%]    > tbody[_ngcontent-%COMP%]    > tr[_ngcontent-%COMP%]:nth-child(even)    > td[_ngcontent-%COMP%], .table-striped[_ngcontent-%COMP%]    > tbody[_ngcontent-%COMP%]    > tr[_ngcontent-%COMP%]:nth-child(even)    > th[_ngcontent-%COMP%] {\\r\\n  background-color: rgb(201, 241, 201);\\r\\n}\\r\\n.header-style[_ngcontent-%COMP%]{\\r\\ncolor: white !important;\\r\\nbackground-color: rgb(49, 190, 49) !important;\\r\\n}\\r\\n.input-label[_ngcontent-%COMP%]{\\r\\n  display:flex;\\r\\n  flex-direction: row;\\r\\n}\\r\\n\\r\\n.label-style[_ngcontent-%COMP%]{\\r\\n  margin-right: 28px;\\r\\n  margin-top: 13px;\\r\\n}\\r\\n.label-comment[_ngcontent-%COMP%]{\\r\\n  margin-right: 54px;\\r\\n}\\r\\n.card-size[_ngcontent-%COMP%] {\\r\\n  width: 90%;\\r\\n  max-height: 50vw;\\r\\n  object-fit: cover;\\r\\n  margin: auto;\\r\\n}\\r\\n.container[_ngcontent-%COMP%]{\\r\\n  max-width:1161px !important;\\r\\n  max-block-size: 60% !important;\\r\\n}\\r\\n.header[_ngcontent-%COMP%]{\\r\\n  margin: auto;\\r\\n}\\r\\n.align-items-center[_ngcontent-%COMP%] {\\r\\n  align-items: center !important;\\r\\n  margin-left: 185px;\\r\\n}\\r\\n.line[_ngcontent-%COMP%]{\\r\\n  max-width: 56%;\\r\\n  margin-top: 19px;\\r\\n}\\r\\n\\r\\n.validation-label-left[_ngcontent-%COMP%]{\\r\\n  margin-left: 129px;\\r\\n  margin-bottom: 8px;\\r\\n}\\r\\n.validation-label-right[_ngcontent-%COMP%]{\\r\\n  margin-left: 65px;\\r\\n  margin-bottom: 8px;\\r\\n}\\r\\n.ng-valid[required][_ngcontent-%COMP%], .ng-valid.required[_ngcontent-%COMP%]  {\\r\\n  border-left: 5px solid #42A948; \\r\\n}\\r\\n\\r\\n.custom-source[_ngcontent-%COMP%]{\\r\\n  margin-left: 58px !important  ;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvX2NvbXBvbmVudHMvcHJvZmlsZVN0YXR1cy9wcm9maWxlL3Byb2ZpbGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7RUFFRSw4Q0FBOEM7RUFDOUMsdUJBQXVCO0FBQ3pCO0FBQ0E7RUFDRSxrQ0FBa0M7RUFDbEMsbUNBQW1DO0VBQ25DLDRCQUE0QjtBQUM5QjtBQUNBO0VBQ0UsNENBQTRDO0FBQzlDO0FBQ0E7RUFDRSxvQ0FBb0M7QUFDdEM7QUFDQTtFQUNFLG9DQUFvQztBQUN0QztBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCLDZDQUE2QztBQUM3QztBQUNBO0VBQ0UsWUFBWTtFQUNaLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixnQkFBZ0I7QUFDbEI7QUFDQTtFQUNFLGtCQUFrQjtBQUNwQjtBQUNBO0VBQ0UsVUFBVTtFQUNWLGdCQUFnQjtFQUNoQixpQkFBaUI7RUFDakIsWUFBWTtBQUNkO0FBQ0E7RUFDRSwyQkFBMkI7RUFDM0IsOEJBQThCO0FBQ2hDO0FBQ0E7RUFDRSxZQUFZO0FBQ2Q7QUFDQTtFQUNFLDhCQUE4QjtFQUM5QixrQkFBa0I7QUFDcEI7QUFDQTtFQUNFLGNBQWM7RUFDZCxnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsa0JBQWtCO0FBQ3BCO0FBQ0E7RUFDRSxpQkFBaUI7RUFDakIsa0JBQWtCO0FBQ3BCO0FBQ0E7RUFDRSw4QkFBOEIsRUFBRSxVQUFVO0FBQzVDOztBQUVBO0VBQ0UsOEJBQThCO0FBQ2hDIiwic291cmNlc0NvbnRlbnQiOlsiLmNhcmQtaGVhZGVyXHJcbntcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAgcmdiKDQ5LCAxOTAsIDQ5KSAhaW1wb3J0YW50O1xyXG4gIGhlaWdodDogNDRweCAhaW1wb3J0YW50O1xyXG59XHJcbi5jYXJke1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkIGdyZWVuICFpbXBvcnRhbnQ7XHJcbiAgYm9yZGVyLWxlZnQtd2lkdGg6IHVuc2V0ICFpbXBvcnRhbnQ7XHJcbiAgYm9yZGVyLXRvcDogdGhpY2sgIWltcG9ydGFudDtcclxufVxyXG4uc2hhZG93IHtcclxuICBib3gtc2hhZG93OiAwIDAuNXJlbSAxcmVtICM4NGI3OWYgIWltcG9ydGFudDtcclxufVxyXG4udGFibGUtc3RyaXBlZCA+IHRib2R5ID4gdHI6bnRoLWNoaWxkKG9kZCkgPiB0ZCwgLnRhYmxlLXN0cmlwZWQgPiB0Ym9keSA+IHRyOm50aC1jaGlsZChvZGQpID4gdGgge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigxNTksIDIzOCwgMTU5KTtcclxufVxyXG4udGFibGUtc3RyaXBlZCA+IHRib2R5ID4gdHI6bnRoLWNoaWxkKGV2ZW4pID4gdGQsIC50YWJsZS1zdHJpcGVkID4gdGJvZHkgPiB0cjpudGgtY2hpbGQoZXZlbikgPiB0aCB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDIwMSwgMjQxLCAyMDEpO1xyXG59XHJcbi5oZWFkZXItc3R5bGV7XHJcbmNvbG9yOiB3aGl0ZSAhaW1wb3J0YW50O1xyXG5iYWNrZ3JvdW5kLWNvbG9yOiByZ2IoNDksIDE5MCwgNDkpICFpbXBvcnRhbnQ7XHJcbn1cclxuLmlucHV0LWxhYmVse1xyXG4gIGRpc3BsYXk6ZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG59XHJcblxyXG4ubGFiZWwtc3R5bGV7XHJcbiAgbWFyZ2luLXJpZ2h0OiAyOHB4O1xyXG4gIG1hcmdpbi10b3A6IDEzcHg7XHJcbn1cclxuLmxhYmVsLWNvbW1lbnR7XHJcbiAgbWFyZ2luLXJpZ2h0OiA1NHB4O1xyXG59XHJcbi5jYXJkLXNpemUge1xyXG4gIHdpZHRoOiA5MCU7XHJcbiAgbWF4LWhlaWdodDogNTB2dztcclxuICBvYmplY3QtZml0OiBjb3ZlcjtcclxuICBtYXJnaW46IGF1dG87XHJcbn1cclxuLmNvbnRhaW5lcntcclxuICBtYXgtd2lkdGg6MTE2MXB4ICFpbXBvcnRhbnQ7XHJcbiAgbWF4LWJsb2NrLXNpemU6IDYwJSAhaW1wb3J0YW50O1xyXG59XHJcbi5oZWFkZXJ7XHJcbiAgbWFyZ2luOiBhdXRvO1xyXG59XHJcbi5hbGlnbi1pdGVtcy1jZW50ZXIge1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXIgIWltcG9ydGFudDtcclxuICBtYXJnaW4tbGVmdDogMTg1cHg7XHJcbn1cclxuLmxpbmV7XHJcbiAgbWF4LXdpZHRoOiA1NiU7XHJcbiAgbWFyZ2luLXRvcDogMTlweDtcclxufVxyXG5cclxuLnZhbGlkYXRpb24tbGFiZWwtbGVmdHtcclxuICBtYXJnaW4tbGVmdDogMTI5cHg7XHJcbiAgbWFyZ2luLWJvdHRvbTogOHB4O1xyXG59XHJcbi52YWxpZGF0aW9uLWxhYmVsLXJpZ2h0e1xyXG4gIG1hcmdpbi1sZWZ0OiA2NXB4O1xyXG4gIG1hcmdpbi1ib3R0b206IDhweDtcclxufVxyXG4ubmctdmFsaWRbcmVxdWlyZWRdLCAubmctdmFsaWQucmVxdWlyZWQgIHtcclxuICBib3JkZXItbGVmdDogNXB4IHNvbGlkICM0MkE5NDg7IC8qIGdyZWVuICovXHJcbn1cclxuXHJcbi5jdXN0b20tc291cmNle1xyXG4gIG1hcmdpbi1sZWZ0OiA1OHB4ICFpbXBvcnRhbnQgIDtcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","Validators","CheckProfileStatusResponseModel","i0","ProfileComponent","constructor","fb","toastr","service","ngOnInit","loadForm","formGroup","group","DialField","required","SourceIdField","LangIdField","categoy","Clear","reset","AddNewProfile","invalid","HandleConditionalForm","console","log","value","createNewProfile","subscribe","res","bucketInfo","errorDoc","arr","object","showToasterSuccess","err","showToasterError","error","get","message","success","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\slashin\\Desktop\\Repos\\Applications\\WorkShop Orange\\Technical\\WorkShop\\WebApiProject\\ClientApp\\src\\app\\_components\\profileStatus\\profile\\profile.component.ts","C:\\Users\\slashin\\Desktop\\Repos\\Applications\\WorkShop Orange\\Technical\\WorkShop\\WebApiProject\\ClientApp\\src\\app\\_components\\profileStatus\\profile\\profile.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { CheckProfileStatusResponseModel } from 'src/app/_models/CheckProfileStatusResponseModel';\nimport { ProfileService } from 'src/app/_services/profile.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\n\nexport class ProfileComponent implements OnInit {\n  checkProfileResponse: CheckProfileStatusResponseModel = new CheckProfileStatusResponseModel;\n  formGroup!: FormGroup;\n  DialField: FormControl = new FormControl;\n  SourceIdField: FormControl = new FormControl;\n  LangIdField: FormControl = new FormControl;\n  object:any[] = [];  \n  \n\n  errorMessage: any;\n  arr: any[]= [];\n  \n  constructor(private fb: FormBuilder,\n    private toastr: ToastrService,\n    public service: ProfileService) {\n  }\n\n  ngOnInit() {\n\n    this.loadForm();\n  }\n\n  loadForm() {\n    this.formGroup = this.fb.group({\n      DialField: [\"\", [Validators.required]],\n      SourceIdField: [\"\"],\n      LangIdField: [\"\"],\n      categoy:[\"\"]\n    });\n  }\n\n  Clear() {\n      this.formGroup.reset();\n       this.loadForm();\n  }\n\n  AddNewProfile() {\n    if (this.formGroup.invalid) {\n      this.HandleConditionalForm();\n      return\n    }\n  console.log(\"AddNewProfile\",this.formGroup.value  );\n    return this.service.createNewProfile(this.formGroup.value)\n      .subscribe((res) => {\n        console.log(res);\n        console.log(res.bucketInfo);\n        console.log(res.errorDoc);   \n        this.arr=res.bucketInfo ;\n        this.object=res.errorDoc ;\n        this.showToasterSuccess(\"Successfully Posted\");\n        this.Clear();\n\n      },\n        err => {\n          console.log(err);\n          this.showToasterError(err.error);\n        });\n  }\n  HandleConditionalForm(): any {\n    if (this.formGroup.get(\"dialField\")?.invalid)\n      return this.showToasterError('Invalid Dial Number');\n  }\n  showToasterError(message: string) {\n   return this.toastr.error(message)\n  }\n\n  public showToasterSuccess(message: string) {\n   return this.toastr.success(message)\n  }\n\n}\n","<div class=\"container w-60 mt-4\">\n    <div class=\"col-12 row align-items-center\">\n      <h2>WorkShop: Call Check Profile Status Service</h2>\n      <hr class=\"line\">\n    </div>\n    <div class=\"card card-size \">\n      <h5 class=\"card-header h-25\"></h5>\n      <div class=\"card-body border-secondary\">\n        <div>\n          <div [formGroup]=\"formGroup\">\n            <div>\n              <div class=\"row\">\n                <div class=\"col-md-6\">\n                  <div>\n                    <div class=\"input-label\">\n                      <small class=\"form-text text-muted label-style\">Option Categorize</small>\n                      <div class=\"col-md-6\">\n                        <select class=\"form-control label-style text-muted shadow-sm  bg-white rounded mb-3  border-success\" formControlName=\"categoy\">\n                          <option value='1' > Success with No Packege Included</option>\n                          <option value='2' > Technical Error with No Packege</option>\n                          <option value='3' > Success with Packege Included</option>\n                          <option value='4' > Technical Error with Packege</option>\n  \n                      </select>\n                      </div>\n                    </div>\n                  </div>\n                  <div>\n                    <div class=\"input-label\">\n                    <small class=\"form-text text-muted label-style \"> Source Id   </small>\n                    <div class=\"col-md-6\">\n                      <input  formControlName=\"SourceIdField\" autocomplete=\"off\" maxlength=\"2\" \n                        class=\"form-control shadow-sm ml-56 mb-3 bg-white rounded custom-source  border-success\" />\n                    </div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md-6\">\n                  <div>\n                    <div class=\"input-label\">\n                      <small class=\"form-text text-muted label-style\">Dial Number</small>\n\n                  <div class=\"col-md-6 \">\n                    <input  formControlName=\"DialField\" autocomplete=\"off\" required maxlength=\"20\"\n                    class=\"form-control shadow-sm mb-3 bg-white rounded  border-success\" />\n                  </div>\n                </div>\n                 <span *ngIf=\"DialField.errors?.invalidName\" class=\"text-danger font-weight-bolder text-danger\"> Dial Number inavlid</span>\n\n                     </div>\n                  <div>\n                    <div class=\"input-label\">\n                    <small class=\"form-text text-muted label-style\">Language Id</small>\n                    <div class=\"col-md-7\">\n                      <input  formControlName=\"LangIdField\" autocomplete=\"off\" maxlength=\"1\" \n                        class=\"form-control shadow-sm  mb-3 bg-white rounded border-success\"/>\n                    </div>\n                    </div>\n                  </div>\n                </div>\n            \n            </div>\n            <div>\n              <div class=\"m-3  mt-3 d-md-flex justify-content-md-end\">\n                <button class=\"btn btn-md btn-primary m-1\" (click)=\"Clear()\">Clear</button>\n                <button class=\"btn btn-md btn-primary m-1\"  (click)=\"AddNewProfile()\">Save</button>\n              </div>\n            </div>\n          </div>\n          <div class=\"shadow p-3 mb-5 bg-body rounded \">\n            <!-- begin:Table -->\n            <div class=\"container \">\n  \n              <table class=\"table table-hover table-bordered  table-striped\">\n                <thead class=\"header-style\">\n                  <th>\n                   Response\n                  </th>\n                </thead>\n                <tbody>\n                  <tr class=\"ml-3\" *ngIf=\"object != null \">\n                    {{object }}\n                    {{arr}}\n                  </tr>\n                </tbody>\n           <tfoot class=\"col-md-4\">\n            <tr>\n              <th class=\"form-text text-muted\" colspan=\"10\"> No Response </th>\n          </tr>\n           </tfoot>\n              </table>\n            </div>\n            <!-- end: Table -->\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}