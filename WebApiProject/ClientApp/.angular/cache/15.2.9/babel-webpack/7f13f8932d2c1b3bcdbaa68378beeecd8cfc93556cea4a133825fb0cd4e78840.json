{"ast":null,"code":"var _class;\nimport { FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"ngx-toastr\";\nimport * as i3 from \"src/app/_services/profile.service\";\nimport * as i4 from \"@angular/common\";\nfunction ProfileComponent_span_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 29);\n    i0.ɵɵtext(1, \" Dial Number inavlid\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class ProfileComponent {\n  constructor(fb, toastr, service) {\n    this.fb = fb;\n    this.toastr = toastr;\n    this.service = service;\n    this.DialField = new FormControl();\n    this.SourceIdField = new FormControl();\n    this.LangIdField = new FormControl();\n    this.bucket = [];\n    this.options = [];\n  }\n  ngOnInit() {\n    this.loadForm();\n  }\n  loadForm() {\n    this.formGroup = this.fb.group({\n      DialField: [\"\", [Validators.required]],\n      SourceIdField: [\"\"],\n      LangIdField: [\"\"],\n      DialOption: [\"01200000001\"]\n    });\n  }\n  Clear() {\n    this.formGroup.reset();\n    this.loadForm();\n  }\n  AddNewProfile() {\n    if (this.formGroup.invalid) {\n      this.HandleConditionalForm();\n      return;\n    }\n    const dial = this.formGroup.controls['DialOption'].value;\n    this.formGroup.controls['DialField'].setValue(dial);\n    return this.service.createNewProfile(this.formGroup.value).subscribe(res => {\n      this.response = res;\n      this.showToasterSuccess(\"Successfully Posted\");\n    }, err => {\n      console.log(err);\n      this.showToasterError(err.error);\n    });\n  }\n  HandleConditionalForm() {\n    if (this.formGroup.get(\"dialField\")?.invalid) return this.showToasterError('Invalid Dial Number');\n  }\n  showToasterError(message) {\n    return this.toastr.error(message);\n  }\n  showToasterSuccess(message) {\n    return this.toastr.success(message);\n  }\n  onChange(value) {\n    {\n      this.formGroup.controls['DialField'].setValue(value);\n      this.formGroup.controls['SourceIdField'].setValue(\"28\");\n      this.formGroup.controls['LangIdField'].setValue(\"1\");\n    }\n  }\n}\n_class = ProfileComponent;\n_class.ɵfac = function ProfileComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ToastrService), i0.ɵɵdirectiveInject(i3.ProfileService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-profile\"]],\n  decls: 62,\n  vars: 5,\n  consts: [[1, \"container\", \"w-60\", \"mt-4\"], [1, \"col-12\", \"row\", \"align-items-center\"], [1, \"line\"], [1, \"card\", \"card-size\"], [1, \"card-header\", \"h-25\"], [1, \"card-body\", \"border-secondary\"], [3, \"formGroup\"], [1, \"row\"], [1, \"mb-3\", \"mt-3\"], [1, \"input-label\"], [1, \"form-text\", \"text-muted\", \"label-style\"], [1, \"col-md-8\"], [\"aria-label\", \".form-select-sm example\", \"formControlName\", \"DialOption\", 1, \"form-select\", \"form-select-sm\", \"text-muted\", \"shadow-sm\", \"bg-white\", \"rounded\", \"mb-3\", \"mt-2\", \"border-success\", 3, \"change\"], [\"select\", \"\"], [\"selected\", \"\", \"value\", \"01200000001\"], [\"value\", \"01200000002\"], [\"value\", \"01200000003\"], [\"value\", \"01200000004\"], [1, \"col-md-4\"], [\"formControlName\", \"DialField\", \"autocomplete\", \"off\", \"required\", \"\", \"maxlength\", \"20\", 1, \"form-control\", \"shadow-sm\", \"mb-3\", \"bg-white\", \"rounded\", \"border-success\"], [\"class\", \"text-danger font-weight-bolder text-danger\", 4, \"ngIf\"], [1, \"col-md-7\"], [\"formControlName\", \"SourceIdField\", \"autocomplete\", \"off\", \"maxlength\", \"2\", 1, \"form-control\", \"shadow-sm\", \"mb-3\", \"bg-white\", \"rounded\", \"border-success\"], [1, \"col-md-6\"], [\"formControlName\", \"LangIdField\", \"autocomplete\", \"off\", \"maxlength\", \"1\", 1, \"form-control\", \"shadow-sm\", \"mb-3\", \"bg-white\", \"rounded\", \"border-success\"], [1, \"m-3\", \"mt-3\", \"d-md-flex\", \"justify-content-md-end\"], [1, \"btn\", \"btn-md\", \"btn-primary\", \"m-1\", 3, \"click\"], [1, \"shadow\", \"p-3\", \"mb-5\", \"bg-body\", \"rounded\"], [1, \"header-style\", \"ml-3\", \"p-3\"], [1, \"text-danger\", \"font-weight-bolder\", \"text-danger\"]],\n  template: function ProfileComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r2 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\");\n      i0.ɵɵtext(3, \"WorkShop: Call Check Profile Status Service\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"hr\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 3);\n      i0.ɵɵelement(6, \"h5\", 4);\n      i0.ɵɵelementStart(7, \"div\", 5)(8, \"div\")(9, \"div\", 6)(10, \"div\")(11, \"div\", 7)(12, \"div\", 8)(13, \"div\", 9)(14, \"small\", 10);\n      i0.ɵɵtext(15, \"Option Categorize\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\", 11)(17, \"select\", 12, 13);\n      i0.ɵɵlistener(\"change\", function ProfileComponent_Template_select_change_17_listener() {\n        i0.ɵɵrestoreView(_r2);\n        const _r0 = i0.ɵɵreference(18);\n        return i0.ɵɵresetView(ctx.onChange(_r0.value));\n      });\n      i0.ɵɵelementStart(19, \"option\", 14);\n      i0.ɵɵtext(20, \" Success with No Packege Included - have option\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"option\", 15);\n      i0.ɵɵtext(22, \" Technical Error with No Packege - no Option\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"option\", 16);\n      i0.ɵɵtext(24, \" Success with Packege Included - have Two option\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"option\", 17);\n      i0.ɵɵtext(26, \" Technical Error with Packege Included - no option\");\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelementStart(27, \"div\", 18)(28, \"div\")(29, \"div\", 9)(30, \"small\", 10);\n      i0.ɵɵtext(31, \"Dial\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"div\", 11);\n      i0.ɵɵelement(33, \"input\", 19);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(34, ProfileComponent_span_34_Template, 2, 0, \"span\", 20);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(35, \"div\", 18)(36, \"div\")(37, \"div\")(38, \"div\", 9)(39, \"small\", 10);\n      i0.ɵɵtext(40, \" Source Id \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(41, \"div\", 21);\n      i0.ɵɵelement(42, \"input\", 22);\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelementStart(43, \"div\", 18)(44, \"div\", 9)(45, \"small\", 10);\n      i0.ɵɵtext(46, \"Language Id\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(47, \"div\", 23);\n      i0.ɵɵelement(48, \"input\", 24);\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(49, \"div\")(50, \"div\", 25)(51, \"button\", 26);\n      i0.ɵɵlistener(\"click\", function ProfileComponent_Template_button_click_51_listener() {\n        return ctx.Clear();\n      });\n      i0.ɵɵtext(52, \"Clear\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(53, \"button\", 26);\n      i0.ɵɵlistener(\"click\", function ProfileComponent_Template_button_click_53_listener() {\n        return ctx.AddNewProfile();\n      });\n      i0.ɵɵtext(54, \"Save\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(55, \"div\", 27)(56, \"div\")(57, \"h3\", 28);\n      i0.ɵɵtext(58, \" Response:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(59, \"pre\");\n      i0.ɵɵtext(60);\n      i0.ɵɵpipe(61, \"json\");\n      i0.ɵɵelementEnd()()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"formGroup\", ctx.formGroup);\n      i0.ɵɵadvance(25);\n      i0.ɵɵproperty(\"ngIf\", ctx.DialField.errors == null ? null : ctx.DialField.errors.invalidName);\n      i0.ɵɵadvance(26);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(61, 3, ctx.response));\n    }\n  },\n  dependencies: [i4.NgIf, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.MaxLengthValidator, i1.FormGroupDirective, i1.FormControlName, i4.JsonPipe],\n  styles: [\".card-header[_ngcontent-%COMP%]\\r\\n{\\r\\n  background-color:  rgb(49, 190, 49) !important;\\r\\n  height: 44px !important;\\r\\n}\\r\\n.card[_ngcontent-%COMP%]{\\r\\n  border: 1px solid green !important;\\r\\n  border-left-width: unset !important;\\r\\n  border-top: thick !important;\\r\\n}\\r\\n.shadow[_ngcontent-%COMP%] {\\r\\n  box-shadow: 0 0.5rem 1rem #84b79f !important;\\r\\n}\\r\\n.table-striped[_ngcontent-%COMP%]    > tbody[_ngcontent-%COMP%]    > tr[_ngcontent-%COMP%]:nth-child(odd)    > td[_ngcontent-%COMP%], .table-striped[_ngcontent-%COMP%]    > tbody[_ngcontent-%COMP%]    > tr[_ngcontent-%COMP%]:nth-child(odd)    > th[_ngcontent-%COMP%] {\\r\\n  background-color: rgb(159, 238, 159);\\r\\n}\\r\\n.table-striped[_ngcontent-%COMP%]    > tbody[_ngcontent-%COMP%]    > tr[_ngcontent-%COMP%]:nth-child(even)    > td[_ngcontent-%COMP%], .table-striped[_ngcontent-%COMP%]    > tbody[_ngcontent-%COMP%]    > tr[_ngcontent-%COMP%]:nth-child(even)    > th[_ngcontent-%COMP%] {\\r\\n  background-color: rgb(201, 241, 201);\\r\\n}\\r\\n.header-style[_ngcontent-%COMP%]{\\r\\ncolor: white !important;\\r\\nbackground-color: rgb(49, 190, 49) !important;\\r\\n}\\r\\n.input-label[_ngcontent-%COMP%]{\\r\\n  display:flex;\\r\\n  flex-direction: row;\\r\\n}\\r\\n\\r\\n.label-style[_ngcontent-%COMP%]{\\r\\n  margin-right: 19px;\\r\\n  margin-top: 13px;\\r\\n}\\r\\n.label-comment[_ngcontent-%COMP%]{\\r\\n  margin-right: 54px;\\r\\n}\\r\\n.card-size[_ngcontent-%COMP%] {\\r\\n  width: 84%;\\r\\n  max-height: 85vw;\\r\\n  object-fit: cover;\\r\\n  margin: auto;\\r\\n}\\r\\n.container[_ngcontent-%COMP%]{\\r\\n  max-width:1161px !important;\\r\\n  max-block-size: 60% !important;\\r\\n}\\r\\n.header[_ngcontent-%COMP%]{\\r\\n  margin: auto;\\r\\n}\\r\\n.align-items-center[_ngcontent-%COMP%] {\\r\\n  align-items: center !important;\\r\\n  margin-left: 185px;\\r\\n}\\r\\n.line[_ngcontent-%COMP%]{\\r\\n  max-width: 56%;\\r\\n  margin-top: 5px;\\r\\n}\\r\\n\\r\\n.ng-valid[required][_ngcontent-%COMP%], .ng-valid.required[_ngcontent-%COMP%]  {\\r\\n  border-left: 5px solid #42A948; \\r\\n}\\r\\n\\r\\n.custom-source[_ngcontent-%COMP%]{\\r\\n  margin-left: 58px !important  ;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvX2NvbXBvbmVudHMvcHJvZmlsZVN0YXR1cy9wcm9maWxlL3Byb2ZpbGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7RUFFRSw4Q0FBOEM7RUFDOUMsdUJBQXVCO0FBQ3pCO0FBQ0E7RUFDRSxrQ0FBa0M7RUFDbEMsbUNBQW1DO0VBQ25DLDRCQUE0QjtBQUM5QjtBQUNBO0VBQ0UsNENBQTRDO0FBQzlDO0FBQ0E7RUFDRSxvQ0FBb0M7QUFDdEM7QUFDQTtFQUNFLG9DQUFvQztBQUN0QztBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCLDZDQUE2QztBQUM3QztBQUNBO0VBQ0UsWUFBWTtFQUNaLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixnQkFBZ0I7QUFDbEI7QUFDQTtFQUNFLGtCQUFrQjtBQUNwQjtBQUNBO0VBQ0UsVUFBVTtFQUNWLGdCQUFnQjtFQUNoQixpQkFBaUI7RUFDakIsWUFBWTtBQUNkO0FBQ0E7RUFDRSwyQkFBMkI7RUFDM0IsOEJBQThCO0FBQ2hDO0FBQ0E7RUFDRSxZQUFZO0FBQ2Q7QUFDQTtFQUNFLDhCQUE4QjtFQUM5QixrQkFBa0I7QUFDcEI7QUFDQTtFQUNFLGNBQWM7RUFDZCxlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsOEJBQThCLEVBQUUsVUFBVTtBQUM1Qzs7QUFFQTtFQUNFLDhCQUE4QjtBQUNoQyIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJkLWhlYWRlclxyXG57XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIHJnYig0OSwgMTkwLCA0OSkgIWltcG9ydGFudDtcclxuICBoZWlnaHQ6IDQ0cHggIWltcG9ydGFudDtcclxufVxyXG4uY2FyZHtcclxuICBib3JkZXI6IDFweCBzb2xpZCBncmVlbiAhaW1wb3J0YW50O1xyXG4gIGJvcmRlci1sZWZ0LXdpZHRoOiB1bnNldCAhaW1wb3J0YW50O1xyXG4gIGJvcmRlci10b3A6IHRoaWNrICFpbXBvcnRhbnQ7XHJcbn1cclxuLnNoYWRvdyB7XHJcbiAgYm94LXNoYWRvdzogMCAwLjVyZW0gMXJlbSAjODRiNzlmICFpbXBvcnRhbnQ7XHJcbn1cclxuLnRhYmxlLXN0cmlwZWQgPiB0Ym9keSA+IHRyOm50aC1jaGlsZChvZGQpID4gdGQsIC50YWJsZS1zdHJpcGVkID4gdGJvZHkgPiB0cjpudGgtY2hpbGQob2RkKSA+IHRoIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTU5LCAyMzgsIDE1OSk7XHJcbn1cclxuLnRhYmxlLXN0cmlwZWQgPiB0Ym9keSA+IHRyOm50aC1jaGlsZChldmVuKSA+IHRkLCAudGFibGUtc3RyaXBlZCA+IHRib2R5ID4gdHI6bnRoLWNoaWxkKGV2ZW4pID4gdGgge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigyMDEsIDI0MSwgMjAxKTtcclxufVxyXG4uaGVhZGVyLXN0eWxle1xyXG5jb2xvcjogd2hpdGUgIWltcG9ydGFudDtcclxuYmFja2dyb3VuZC1jb2xvcjogcmdiKDQ5LCAxOTAsIDQ5KSAhaW1wb3J0YW50O1xyXG59XHJcbi5pbnB1dC1sYWJlbHtcclxuICBkaXNwbGF5OmZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcclxufVxyXG5cclxuLmxhYmVsLXN0eWxle1xyXG4gIG1hcmdpbi1yaWdodDogMTlweDtcclxuICBtYXJnaW4tdG9wOiAxM3B4O1xyXG59XHJcbi5sYWJlbC1jb21tZW50e1xyXG4gIG1hcmdpbi1yaWdodDogNTRweDtcclxufVxyXG4uY2FyZC1zaXplIHtcclxuICB3aWR0aDogODQlO1xyXG4gIG1heC1oZWlnaHQ6IDg1dnc7XHJcbiAgb2JqZWN0LWZpdDogY292ZXI7XHJcbiAgbWFyZ2luOiBhdXRvO1xyXG59XHJcbi5jb250YWluZXJ7XHJcbiAgbWF4LXdpZHRoOjExNjFweCAhaW1wb3J0YW50O1xyXG4gIG1heC1ibG9jay1zaXplOiA2MCUgIWltcG9ydGFudDtcclxufVxyXG4uaGVhZGVye1xyXG4gIG1hcmdpbjogYXV0bztcclxufVxyXG4uYWxpZ24taXRlbXMtY2VudGVyIHtcclxuICBhbGlnbi1pdGVtczogY2VudGVyICFpbXBvcnRhbnQ7XHJcbiAgbWFyZ2luLWxlZnQ6IDE4NXB4O1xyXG59XHJcbi5saW5le1xyXG4gIG1heC13aWR0aDogNTYlO1xyXG4gIG1hcmdpbi10b3A6IDVweDtcclxufVxyXG5cclxuLm5nLXZhbGlkW3JlcXVpcmVkXSwgLm5nLXZhbGlkLnJlcXVpcmVkICB7XHJcbiAgYm9yZGVyLWxlZnQ6IDVweCBzb2xpZCAjNDJBOTQ4OyAvKiBncmVlbiAqL1xyXG59XHJcblxyXG4uY3VzdG9tLXNvdXJjZXtcclxuICBtYXJnaW4tbGVmdDogNThweCAhaW1wb3J0YW50ICA7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","Validators","i0","ProfileComponent","constructor","fb","toastr","service","ngOnInit","loadForm","formGroup","group","DialField","required","SourceIdField","LangIdField","DialOption","Clear","reset","AddNewProfile","invalid","HandleConditionalForm","dial","controls","value","setValue","createNewProfile","subscribe","res","response","showToasterSuccess","err","console","log","showToasterError","error","get","message","success","onChange","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\slashin\\Desktop\\Repos\\Applications\\WorkShop Orange\\Technical\\WorkShop\\WebApiProject\\ClientApp\\src\\app\\_components\\profileStatus\\profile\\profile.component.ts","C:\\Users\\slashin\\Desktop\\Repos\\Applications\\WorkShop Orange\\Technical\\WorkShop\\WebApiProject\\ClientApp\\src\\app\\_components\\profileStatus\\profile\\profile.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { BucketInfoModel, CheckProfileStatusResponseModel, ErrorDocModel, OptionsListModel } from 'src/app/_models/CheckProfileStatusResponseModel';\nimport { ProfileService } from 'src/app/_services/profile.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\n\nexport class ProfileComponent implements OnInit {\n\n  bucketInfo!: BucketInfoModel;\n  optionsList!:OptionsListModel; \n  errorDoc!:ErrorDocModel; \n  //CheckProfileStatusResponseModel!: CheckProfileStatusResponseModel;\n  formGroup!: FormGroup;\n  DialField: FormControl = new FormControl;\n  SourceIdField: FormControl = new FormControl;\n  LangIdField: FormControl = new FormControl;\n  bucket:any[] = [];  \n  response: any;\n  options: any[] = [];\n  object!: string;\n  \n  constructor(private fb: FormBuilder,\n    private toastr: ToastrService,\n    public service: ProfileService) {\n  }\n\n  ngOnInit() {\n\n    this.loadForm();\n    \n  }\n\n  loadForm() {\n    this.formGroup = this.fb.group({\n      DialField: [\"\", [Validators.required]],\n      SourceIdField: [\"\"],\n      LangIdField: [\"\"],\n      DialOption:[\"01200000001\"]\n    });\n  }\n\n  Clear() {\n      this.formGroup.reset();\n       this.loadForm();\n  }\n\n  AddNewProfile() {\n    if (this.formGroup.invalid) {\n      this.HandleConditionalForm();\n      return\n    }\n    const dial=this.formGroup.controls['DialOption'].value;\n    this.formGroup.controls['DialField'].setValue(dial);\n    return this.service.createNewProfile(this.formGroup.value)\n      .subscribe((res) => {\n       this.response=res;\n        this.showToasterSuccess(\"Successfully Posted\");\n      },\n        err => {\n          console.log(err);\n          this.showToasterError(err.error);\n        });\n  }\n  HandleConditionalForm(): any {\n    if (this.formGroup.get(\"dialField\")?.invalid)\n      return this.showToasterError('Invalid Dial Number');\n  }\n  showToasterError(message: string) {\n   return this.toastr.error(message)\n  }\n\n  public showToasterSuccess(message: string) {\n   return this.toastr.success(message)\n  }\n  onChange(value: any) {\n  {\n\n  this.formGroup.controls['DialField'].setValue(value);\n  this.formGroup.controls['SourceIdField'].setValue(\"28\");\n  this.formGroup.controls['LangIdField'].setValue(\"1\");\n  }\n}\n}\n","<div class=\"container w-60 mt-4\">\n    <div class=\"col-12 row align-items-center\">\n      <h2>WorkShop: Call Check Profile Status Service</h2>\n      <hr class=\"line\">\n    </div>\n    <div class=\"card card-size \">\n      <h5 class=\"card-header h-25\"></h5>\n      <div class=\"card-body border-secondary\">\n        <div>\n          <div [formGroup]=\"formGroup\">\n            <div>\n              <div class=\"row\">\n                <div class=\"mb-3 mt-3\">\n                  <div class=\"input-label\">\n                    <small class=\"form-text text-muted label-style\">Option Categorize</small>\n                    <div class=\"col-md-8\">\n                      <select class=\"form-select form-select-sm text-muted shadow-sm  bg-white rounded mb-3 mt-2 border-success\" \n                      aria-label=\".form-select-sm example\" formControlName=\"DialOption\" #select (change)=\"onChange(select.value)\">\n                        <option selected value='01200000001' > Success with No Packege Included - have option</option>\n                        <option value='01200000002' > Technical Error with No Packege - no Option</option>\n                        <option value='01200000003' > Success with Packege Included - have Two option</option>\n                        <option value='01200000004' > Technical Error with Packege Included - no option</option>\n\n                      </select>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md-4\">\n                  <div>\n                    <div class=\"input-label\">\n                      <small class=\"form-text text-muted label-style\">Dial</small>\n\n                  <div class=\"col-md-8 \">\n                    <input  formControlName=\"DialField\" autocomplete=\"off\" required maxlength=\"20\"\n                    class=\"form-control shadow-sm mb-3 bg-white rounded  border-success\" />\n                  </div>\n                </div>\n                 <span *ngIf=\"DialField.errors?.invalidName\" class=\"text-danger font-weight-bolder text-danger\"> Dial Number inavlid</span>\n\n                     </div>\n                 \n                </div>\n                <div class=\"col-md-4\">\n                  <div>\n                    <div>\n                      <div class=\"input-label\">\n                      <small class=\"form-text text-muted label-style \"> Source Id   </small>\n                      <div class=\"col-md-7\">\n                        <input  formControlName=\"SourceIdField\" autocomplete=\"off\" maxlength=\"2\" \n                          class=\"form-control shadow-sm  mb-3 bg-white rounded  border-success\" />\n                      </div>\n                      </div>\n                    </div>\n                  </div>\n            \n                </div>\n                <div class=\"col-md-4\">\n                  <div class=\"input-label\">\n                    <small class=\"form-text text-muted label-style\">Language Id</small>\n                    <div class=\"col-md-6\">\n                      <input  formControlName=\"LangIdField\" autocomplete=\"off\" maxlength=\"1\" \n                        class=\"form-control shadow-sm  mb-3 bg-white rounded border-success\"/>\n                    </div>\n                    </div>\n                </div>\n            </div>\n            <div>\n              <div class=\"m-3  mt-3 d-md-flex justify-content-md-end\">\n                <button class=\"btn btn-md btn-primary m-1\" (click)=\"Clear()\">Clear</button>\n                <button class=\"btn btn-md btn-primary m-1\"  (click)=\"AddNewProfile()\">Save</button>\n              </div>\n            </div>\n          </div>\n          <div class=\"shadow p-3 mb-5 bg-body rounded \">\n            <div>\n              <h3 class=\"header-style ml-3 p-3\"> Response:</h3>\n              <pre>{{ response | json }}</pre>\n          </div>  \n          </div>\n        </div>\n      </div>\n    </div>\n  </div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}